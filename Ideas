import nashpy as nash
import numpy as np
import matplotlib.pyplot as plt

#3 types and mutation
             
A = np.array([[2, -1, 1], [4, 1, 0], [1, 1, 0]]) #payoffs of playing A, B, C

game = nash.Game(A)

dA = [1, 0, 0]         #Type A has P_A(A) = 1,  P_A(B) = 0, P_A(C) = 0

dB = [1/3, 1/3, 1/3]   #Type B has P_B(A) = 1/3,  P_B(B) = 1/3, P_B(C) = 1/3

dC = [1/9, 7/9, 1/9]   #Type C has P_C(A) = 1/9, P_C(B) = 7/9, P_C() = 1/9

Q = np.array([dA, dB, dC]) 

y0 = np.array([0.3, 0.4, 0.0])

generations = game.replicator_dynamics(y0=y0, mutation_matrix = Q)

game.replicator_dynamics()

game

#find out how include randomness and shorten time periods
#pred prey with immune vs cancer. pay offs change with size interaction
#given high freq of immune pay offs are: 
#given high cancer pay offs are: 
#if one dies the other doesn't
#cemo?


plt.plot(generations) 
plt.xlabel("Timepoints") 
plt.ylabel("Population Type Frequencies") 
plt.title("Frequencies of Population Types over time") 
plt.legend(['Type A', 'Type B', 'Type C'], loc='upper left')
